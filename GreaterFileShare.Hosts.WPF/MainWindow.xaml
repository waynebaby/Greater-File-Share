<mvvm:MVVMWindow xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"       
        xmlns:mvvm="clr-namespace:MVVMSidekick.Views;assembly=MVVMSidekick"        
        xmlns:vm="clr-namespace:GreaterFileShare.Hosts.WPF.ViewModels" 
        xmlns:Glue="clr-namespace:GreaterFileShare.Hosts.WPF.Glue" 
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" 
        x:Class="GreaterFileShare.Hosts.WPF.MainWindow"    
        MinHeight="640"  MinWidth="800" Height="800" Width="1024" Title="Greater File Share Host" Icon="Assets/Icon.ico" >

    <mvvm:MVVMWindow.Resources>
        <Glue:ShareTaskUrlConverter x:Key="ShareTaskUrlConverter"/>
        <Glue:TaskStateConverter x:Key="TaskStateConverter"/>
        <Glue:IsNotNullValueConverter x:Key="IsNotNullValueConverter"/>
        <Glue:IsNullValueConverter x:Key="IsNullValueConverter"/>
        <Glue:NotBoolValueConverter x:Key="NotBoolValueConverter"/>

        <DataTemplate x:Key="ShareFileTaskTemplate">
            <StackPanel x:Name="stackPanel"     Width="{Binding ActualWidth, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}" 
                    
                        Background="Transparent">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="ErrorStateGroup">
                        <VisualState x:Name="NoError">

                        </VisualState>
                        <VisualState x:Name="Error">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" 
                                                              Storyboard.TargetName="stackPanel">
                                    <EasingColorKeyFrame KeyTime="0" Value="#60FF0000"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Hosting">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" 
                                                              Storyboard.TargetName="stackPanel">
                                    <EasingColorKeyFrame KeyTime="0" Value="#6000FF00"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <i:Interaction.Triggers>
                    <ei:PropertyChangedTrigger Binding="{Binding HasErrors}" >
                        <ei:GoToStateAction   StateName="{Binding Converter={StaticResource TaskStateConverter}}"/>
                    </ei:PropertyChangedTrigger>
                    <ei:PropertyChangedTrigger Binding="{Binding IsHosting}" >
                        <ei:GoToStateAction   StateName="{Binding Converter={StaticResource TaskStateConverter}}"/>
                    </ei:PropertyChangedTrigger>
                </i:Interaction.Triggers>

                <TextBlock><Run FontWeight="Bold" Text="Port"/><Run Text="&#x9;&#x9;"/><Run Text="{Binding Port}"/></TextBlock>
                <TextBlock><Run FontWeight="Bold" Text="Path"/><Run Text="&#x9;&#x9;"/><Run Text="{Binding Path}" /></TextBlock>
                <TextBlock><Run FontWeight="Bold" Text="Is Hosting"/><Run Text="&#x9;"/><Run Text="{Binding IsHosting, Mode=OneWay}" /></TextBlock>
                <TextBlock><Run FontWeight="Bold" Text="Last Error"/><Run Text="&#x9;"/><Run Text="{Binding LastException.Message, Mode=OneWay}"/></TextBlock>



                <TextBlock><Run FontWeight="Bold" Text="Root Url"/><Run Text="&#x9;"/><Run Text="{Binding Converter={StaticResource ShareTaskUrlConverter}, Mode=OneWay}"/></TextBlock>

            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="MessageItemTemplate">
            <Grid>
                <TextBlock Foreground="#CCC"><Run Text="{Binding Time}"/><Run Text="&#x9;"/><Run Text="{Binding Message}"/></TextBlock>
            </Grid>
        </DataTemplate>
        <!--<Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->
    </mvvm:MVVMWindow.Resources>
    <mvvm:MVVMWindow.Background>
        <ImageBrush ImageSource="Assets/map.png" Stretch="UniformToFill" />
    </mvvm:MVVMWindow.Background>
    <Grid Background="#22FFFFFF">
        <Grid.DataContext>
            <StaticResource ResourceKey="DesignVM"/>
        </Grid.DataContext>
        <Grid x:Name="grid">
            <Grid.DataContext>
                <StaticResource ResourceKey="DesignVM"/>
            </Grid.DataContext>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="300"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" MinHeight="350"/>
                <RowDefinition Height="5" />
                <RowDefinition Height="150" />
            </Grid.RowDefinitions>

            <Border Grid.Row="0" Grid.Column="1" Background="Transparent" IsEnabled="{Binding CurrentTask, Converter={StaticResource IsNotNullValueConverter}, Mode=OneWay}" >
                <Grid Margin="10">


                    <StackPanel Grid.Row="1">
                        <Label Content="Configuration" FontSize="{StaticResource SubHeaderFontSize}" FontWeight="Light" />
                        <DataGrid BorderBrush="#CCC" IsEnabled="{Binding CurrentTask.IsHosting, Converter={StaticResource NotBoolValueConverter}, Mode=Default}" BorderThickness="1" Grid.Row="1" AutoGenerateColumns="False" Height="300" Background="Transparent" ItemsSource="{Binding CurrentTask.AdditionalContentTypes}"  Grid.RowSpan="2">
                            <DataGrid.Columns>
                                <DataGridTextColumn  Width="120" Binding="{Binding ExtensionName}" Header="Extension Name"/>
                                <DataGridTextColumn Width="120" Binding="{Binding ContentType}" Header="Content Type"/>
                            </DataGrid.Columns>
                        </DataGrid>
                        <StackPanel>
                            <Label Content="PORT"/>
                            <xctk:IntegerUpDown Minimum="0" Maximum="65535" Value="{Binding CurrentTask.Port, Mode=TwoWay}" 
                                  IsEnabled="{Binding CurrentTask.IsHosting, Converter={StaticResource NotBoolValueConverter}, Mode=Default}"              HorizontalContentAlignment="Right" TextAlignment="Left" Height="28" BorderBrush="#CCC" />
                        </StackPanel>
                        <StackPanel>
                            <Label Content="FOLDER PATH"/>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="32*"/>
                                    <ColumnDefinition Width="30"/>
                                </Grid.ColumnDefinitions>
                                <TextBox IsReadOnly="True"  Text="{Binding CurrentTask.Path, Mode=OneWay}" IsEnabled="{Binding CurrentTask.IsHosting, Converter={StaticResource NotBoolValueConverter}, Mode=Default}"/>
                                <Button Grid.Column="1" Content="..." IsEnabled="{Binding CurrentTask.IsHosting, Converter={StaticResource NotBoolValueConverter}, Mode=Default}"  >
                                    <i:Interaction.Behaviors>
                                        <Glue:PickFolderBehavior Folder="{Binding CurrentTask.Path, Mode=TwoWay}"/>
                                    </i:Interaction.Behaviors>
                                </Button>
                            </Grid>
                        </StackPanel>
                        <StackPanel/>
                        <Button Command="{Binding CurrentTask.CommandStartHosting}" Content="Start / Stop" HorizontalAlignment="Stretch" Margin="0,20,0,0" Background="ForestGreen" Foreground="White" />
                    </StackPanel>
                </Grid>
            </Border>
            <Border Grid.Row="0" Grid.Column="0" Background="Transparent" Margin="10">
                <Grid Background="Transparent">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Label Content="Instances" FontSize="{StaticResource SubHeaderFontSize}" FontWeight="Light" />
                    <ListBox 
                        Grid.Row="1"
                        Background="Transparent"
                    ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                        x:Name="tasksList"
                        ItemsSource="{Binding HostingTasks}" 
                        SelectedItem="{Binding CurrentTask, Mode=TwoWay}" 
                        SelectedIndex="0" 
                        ItemTemplate="{DynamicResource ShareFileTaskTemplate}" >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <Glue:ScrollToSelectedAction />

                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ListBox>
                    <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,20,0,0">
                        <Button Command="{Binding CommandNewHost}"  Content="New Host Entry" Margin="0,0,10,0" />
                        <Button Command="{Binding CommandDeleteHost}"  Content="Delete Host Entry" Margin="0,0,10,0"/>
                        <Button Command="{Binding CommandShowQR}" Content="Show QR and Links" Margin="0,0,10,0"/>
                        <Button Command="{Binding CommandSaveSettings}"  Content="Save Settings" />
                    </StackPanel>
                </Grid>
            </Border>
            <Border Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Background="#88000000">
                <ListBox Background="#88000000" ItemsSource="{Binding Messages}" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                         SelectedIndex="{Binding CurrentMessageIndex, Mode=TwoWay}" 
                         FontFamily="Consolas"
                         FontSize="12"
                         ItemTemplate="{DynamicResource MessageItemTemplate}" 
                 >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <Glue:ScrollToSelectedAction />

                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                </ListBox>
            </Border>

            <GridSplitter Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="100" 
                          VerticalAlignment="Stretch" 
                          HorizontalAlignment="Stretch" 
                          ResizeBehavior="PreviousAndNext" />
        </Grid>
    </Grid>
</mvvm:MVVMWindow>
